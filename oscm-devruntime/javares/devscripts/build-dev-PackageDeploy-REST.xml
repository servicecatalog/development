<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright FUJITSU LIMITED 2016-->
 
<project name="ADM Developer tasks - PACKAGE, DEPLOY for REST" default="" basedir=".">

  <description>This buildfile is used to BUILD, PACKAGE and DEPLOY productive OSCM applications like the portal, birt or the server ear.
  </description>

  <import file="macrodefs-dev.xml" />
  <property environment="env" />
  <property name="env.HOSTNAME" value="${env.COMPUTERNAME}" />
  <property name="dev.dir" value="${basedir}/../../.." />
  <property name="adm.ue.buildscript.dir" location="${dev.dir}/oscm-build" />
  <property name="adm.ue.buildscript.file" location="${adm.ue.buildscript.dir}/build.xml" />
  <property name="build.result.package.dir" location="${adm.ue.buildscript.dir}/result/package" />
  <property name="integration.resources.dir" location="${dev.dir}/oscm-integrationtests-setup/resources" />
  <property name="local.dir" value="${basedir}/../local/${env.HOSTNAME}" />
  <verifyFileExists filePath="${local.dir}/integration.properties" />
  <echo message="Loading integration.properties from ${local.dir}/integration.properties" />
  <property file="${local.dir}/integration.properties" />
  <property file="${local.dir}/test.properties" />
  <property name="bes.domain.apps" value="${glassfish.home}/glassfish/domains/${glassfish.bes.domain.name}/applications" />
  <property name="master.domain.apps" value="${glassfish.home}/glassfish/domains/${glassfish.master.domain.name}/applications" />
  <property name="example.domain.apps" value="${glassfish.home}/glassfish/domains/${glassfish.example.domain.name}/applications" />
  <property name="app.domain.apps" value="${glassfish.home}/glassfish/domains/${glassfish.app.domain.name}/applications" />
  <property name="working.dir" value="${local.dir}" />
  <available file="${build.result.package.dir}/oscm-devruntime" type="dir" property="DatabaseUpgradeHandler.present" />
  <available file="${build.result.package.dir}/oscm-extsvc-internal" type="dir" property="WebtestEnvironment.present" />
  <import file="${basedir}/../macrodefs.xml" />
  <import file="${integration.resources.dir}/macrodefs_integration.xml" />
  <besDomainProperties />
  <clusterProperties />
  <property name="db.url.testdb" value="jdbc:postgresql://${db.host}:${db.port}/bssunittests" />

  <target name="REST-Trigger.BUILD" description="Builds the Rest API war file, the result can be found in oscm-build/result/package/oscm-rest-api-trigger">
    <ant dir="${adm.ue.buildscript.dir}" antfile="${adm.ue.buildscript.file}" target="package">
      <property name="projects" value="oscm-rest-api-trigger" />
    </ant>
    <patchForRedeployableWebContent file="${build.result.package.dir}/oscm-rest-api-trigger/oscm-rest-api-trigger.war" />
  </target>

  <target name="REST-Trigger.DEPLOY" description="Deploys the Rest API war file into the BES domain">
    <delete file="${bes.domain.apps}/oscm-rest-api-trigger/.glassfishStaleFiles" failonerror="false" />
    <deployOnBesDomain target="server" appl="${build.result.package.dir}/oscm-rest-api-trigger/oscm-rest-api-trigger.war" />
  </target>

  <target name="REST-Trigger.REDEPLOY" description="Redeploys the Rest API war file into the BES domain">
    <delete file="${bes.domain.apps}/oscm-rest-api-trigger/.glassfishStaleFiles" failonerror="false" />
    <redeployOnBesDomain target="server" appl="${build.result.package.dir}/oscm-rest-api-trigger/oscm-rest-api-trigger.war" appname="oscm-rest-api-trigger" />
  </target>

  <target name="REST-Trigger.UNDEPLOY" description="Undeploys the Rest API war file into the BES domain">
    <undeployFromBesDomain target="server" appl="oscm-rest-api-trigger" failonerror="false" />
  </target>
  
    <target name="REST-Mock.BUILD" description="Builds the Rest API war file, the result can be found in oscm-build/result/package/oscm-rest-api-mock">
    <ant dir="${adm.ue.buildscript.dir}" antfile="${adm.ue.buildscript.file}" target="package">
      <property name="projects" value="oscm-rest-api-mock" />
    </ant>
    <patchForRedeployableWebContent file="${build.result.package.dir}/oscm-rest-api-mock/oscm-rest-api-mock.war" />
  </target>

  <target name="REST-Mock.DEPLOY" description="Deploys the Rest API war file into the BES domain">
    <delete file="${bes.domain.apps}/oscm-rest-api-mock/.glassfishStaleFiles" failonerror="false" />
    <deployOnBesDomain target="server" appl="${build.result.package.dir}/oscm-rest-api-mock/oscm-rest-api-mock.war" />
  </target>

  <target name="REST-Mock.REDEPLOY" description="Redeploys the Rest API war file into the BES domain">
    <delete file="${bes.domain.apps}/oscm-rest-api-mock/.glassfishStaleFiles" failonerror="false" />
    <redeployOnBesDomain target="server" appl="${build.result.package.dir}/oscm-rest-api-mock/oscm-rest-api-mock.war" appname="oscm-rest-api-mock" />
  </target>

  <target name="REST-Mock.UNDEPLOY" description="Undeploys the Rest API war file into the BES domain">
    <undeployFromBesDomain target="server" appl="oscm-rest-api-mock" failonerror="false" />
  </target>
    
</project>
